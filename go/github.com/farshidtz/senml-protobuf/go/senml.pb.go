// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: senml.proto

package _go

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base meta fields
	BaseName    string  `protobuf:"bytes,1,opt,name=baseName,proto3" json:"baseName,omitempty"`
	BaseTime    float64 `protobuf:"fixed64,2,opt,name=baseTime,proto3" json:"baseTime,omitempty"`
	BaseUnit    string  `protobuf:"bytes,3,opt,name=baseUnit,proto3" json:"baseUnit,omitempty"`
	BaseVersion int32   `protobuf:"varint,4,opt,name=baseVersion,proto3" json:"baseVersion,omitempty"`
	// Types that are assignable to BaseValueOptional:
	//	*Record_BaseValue
	BaseValueOptional isRecord_BaseValueOptional `protobuf_oneof:"baseValueOptional"`
	// Types that are assignable to BaseSumOptional:
	//	*Record_BaseSum
	BaseSumOptional isRecord_BaseSumOptional `protobuf_oneof:"baseSumOptional"`
	// meta fields
	Name       string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Unit       string  `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	Time       float64 `protobuf:"fixed64,9,opt,name=time,proto3" json:"time,omitempty"`
	UpdateTime float64 `protobuf:"fixed64,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	// value fields
	//
	// Types that are assignable to ValueOneof:
	//	*Record_Value
	//	*Record_StringValue
	//	*Record_DataValue
	//	*Record_BoolValue
	ValueOneof isRecord_ValueOneof `protobuf_oneof:"valueOneof"`
	// Types that are assignable to SumOptional:
	//	*Record_Sum
	SumOptional isRecord_SumOptional `protobuf_oneof:"sumOptional"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_senml_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_senml_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_senml_proto_rawDescGZIP(), []int{0}
}

func (x *Record) GetBaseName() string {
	if x != nil {
		return x.BaseName
	}
	return ""
}

func (x *Record) GetBaseTime() float64 {
	if x != nil {
		return x.BaseTime
	}
	return 0
}

func (x *Record) GetBaseUnit() string {
	if x != nil {
		return x.BaseUnit
	}
	return ""
}

func (x *Record) GetBaseVersion() int32 {
	if x != nil {
		return x.BaseVersion
	}
	return 0
}

func (m *Record) GetBaseValueOptional() isRecord_BaseValueOptional {
	if m != nil {
		return m.BaseValueOptional
	}
	return nil
}

func (x *Record) GetBaseValue() float64 {
	if x, ok := x.GetBaseValueOptional().(*Record_BaseValue); ok {
		return x.BaseValue
	}
	return 0
}

func (m *Record) GetBaseSumOptional() isRecord_BaseSumOptional {
	if m != nil {
		return m.BaseSumOptional
	}
	return nil
}

func (x *Record) GetBaseSum() float64 {
	if x, ok := x.GetBaseSumOptional().(*Record_BaseSum); ok {
		return x.BaseSum
	}
	return 0
}

func (x *Record) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Record) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Record) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Record) GetUpdateTime() float64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (m *Record) GetValueOneof() isRecord_ValueOneof {
	if m != nil {
		return m.ValueOneof
	}
	return nil
}

func (x *Record) GetValue() float64 {
	if x, ok := x.GetValueOneof().(*Record_Value); ok {
		return x.Value
	}
	return 0
}

func (x *Record) GetStringValue() string {
	if x, ok := x.GetValueOneof().(*Record_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Record) GetDataValue() string {
	if x, ok := x.GetValueOneof().(*Record_DataValue); ok {
		return x.DataValue
	}
	return ""
}

func (x *Record) GetBoolValue() bool {
	if x, ok := x.GetValueOneof().(*Record_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *Record) GetSumOptional() isRecord_SumOptional {
	if m != nil {
		return m.SumOptional
	}
	return nil
}

func (x *Record) GetSum() float64 {
	if x, ok := x.GetSumOptional().(*Record_Sum); ok {
		return x.Sum
	}
	return 0
}

type isRecord_BaseValueOptional interface {
	isRecord_BaseValueOptional()
}

type Record_BaseValue struct {
	BaseValue float64 `protobuf:"fixed64,5,opt,name=baseValue,proto3,oneof"`
}

func (*Record_BaseValue) isRecord_BaseValueOptional() {}

type isRecord_BaseSumOptional interface {
	isRecord_BaseSumOptional()
}

type Record_BaseSum struct {
	BaseSum float64 `protobuf:"fixed64,6,opt,name=baseSum,proto3,oneof"`
}

func (*Record_BaseSum) isRecord_BaseSumOptional() {}

type isRecord_ValueOneof interface {
	isRecord_ValueOneof()
}

type Record_Value struct {
	Value float64 `protobuf:"fixed64,11,opt,name=value,proto3,oneof"`
}

type Record_StringValue struct {
	StringValue string `protobuf:"bytes,12,opt,name=stringValue,proto3,oneof"`
}

type Record_DataValue struct {
	DataValue string `protobuf:"bytes,13,opt,name=dataValue,proto3,oneof"`
}

type Record_BoolValue struct {
	BoolValue bool `protobuf:"varint,14,opt,name=boolValue,proto3,oneof"`
}

func (*Record_Value) isRecord_ValueOneof() {}

func (*Record_StringValue) isRecord_ValueOneof() {}

func (*Record_DataValue) isRecord_ValueOneof() {}

func (*Record_BoolValue) isRecord_ValueOneof() {}

type isRecord_SumOptional interface {
	isRecord_SumOptional()
}

type Record_Sum struct {
	Sum float64 `protobuf:"fixed64,15,opt,name=sum,proto3,oneof"`
}

func (*Record_Sum) isRecord_SumOptional() {}

// this contains the senml pack (array of records)
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pack []*Record `protobuf:"bytes,1,rep,name=pack,proto3" json:"pack,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_senml_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_senml_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_senml_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetPack() []*Record {
	if x != nil {
		return x.Pack
	}
	return nil
}

var File_senml_proto protoreflect.FileDescriptor

var file_senml_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x6d, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73,
	0x65, 0x6e, 0x6d, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0xeb, 0x03,
	0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x53, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x03, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x42, 0x13, 0x0a, 0x11, 0x62, 0x61, 0x73, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x62,
	0x61, 0x73, 0x65, 0x53, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x0c,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x0d, 0x0a, 0x0b,
	0x73, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6e, 0x6d, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x70, 0x61,
	0x63, 0x6b, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x61, 0x72, 0x73, 0x68, 0x69, 0x64, 0x74, 0x7a, 0x2f, 0x73, 0x65, 0x6e, 0x6d, 0x6c,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_senml_proto_rawDescOnce sync.Once
	file_senml_proto_rawDescData = file_senml_proto_rawDesc
)

func file_senml_proto_rawDescGZIP() []byte {
	file_senml_proto_rawDescOnce.Do(func() {
		file_senml_proto_rawDescData = protoimpl.X.CompressGZIP(file_senml_proto_rawDescData)
	})
	return file_senml_proto_rawDescData
}

var file_senml_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_senml_proto_goTypes = []interface{}{
	(*Record)(nil),  // 0: senml_protobuf.Record
	(*Message)(nil), // 1: senml_protobuf.Message
}
var file_senml_proto_depIdxs = []int32{
	0, // 0: senml_protobuf.Message.pack:type_name -> senml_protobuf.Record
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_senml_proto_init() }
func file_senml_proto_init() {
	if File_senml_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_senml_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_senml_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_senml_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Record_BaseValue)(nil),
		(*Record_BaseSum)(nil),
		(*Record_Value)(nil),
		(*Record_StringValue)(nil),
		(*Record_DataValue)(nil),
		(*Record_BoolValue)(nil),
		(*Record_Sum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_senml_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_senml_proto_goTypes,
		DependencyIndexes: file_senml_proto_depIdxs,
		MessageInfos:      file_senml_proto_msgTypes,
	}.Build()
	File_senml_proto = out.File
	file_senml_proto_rawDesc = nil
	file_senml_proto_goTypes = nil
	file_senml_proto_depIdxs = nil
}
